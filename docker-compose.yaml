version: '3.8'
services:
  db:
    image: postgres:14.5-alpine
    restart: always
    command: ["postgres", "-c", "log_statement=all"]
    environment:
    #TODO: move these into an enviroment file
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
      - ./microservices/authentication/data/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      timeout: 15s
      interval: 10s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_URL="postgres://postgres:postgres@localhost:5432/user_auth"
    depends_on:
      - db
    networks:
      - default
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/ping" ]
      timeout: 15s
      interval: 10s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    networks:
      - default
    ports:
      - "3000:3000"
    volumes:
      - ./web/src:/app/src
    environment:
      - REACT_APP_CLIENT_ID=b23cd1f8020e17a56ca5
      - REACT_APP_REDIRECT_URI=http://localhost:3000
      - REACT_APP_PROXY_URL=http://localhost:8080/auth/logged_in
    depends_on:
      backend:
        condition: service_healthy

volumes:
  db:
    driver: local
